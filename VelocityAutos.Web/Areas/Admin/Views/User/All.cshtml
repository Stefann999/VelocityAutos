@using Microsoft.AspNetCore.Identity
@using VelocityAutos.Data.Models
@using VelocityAutos.Services.Data.Interfaces
@using VelocityAutos.Web.Infrastructure.Middlewares
@using static VelocityAutos.Common.GeneralApplicationConstants
@model IEnumerable<UserViewModel>

@inject UserManager<ApplicationUser> userManager
@inject IUserService userService

@{
    ViewBag.Title = "All Users";
}

<head>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        body {
            background-color: #f8f9fa;
            font-family: Arial, sans-serif;
            background-image: none;
        }

        .home-text {
            font-size: 0px;
        }

        .container {
            margin-top: 30px;
        }

        .user-card {
            background-color: #fff;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
        }

            .user-card .user-info {
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 10px;
            }

        .user-status {
            font-weight: bold;
            text-transform: uppercase;
            border-radius: 20px;
            padding: 5px 15px;
        }

        .user-online {
            color: #28a745;
            background-color: rgba(40, 167, 69, 0.1);
        }

        .user-offline {
            color: #dc3545;
            background-color: rgba(220, 53, 69, 0.1);
        }
    </style>
</head>

<div class="container">
    <h2 class="text-center">@ViewBag.Title</h2>
    <hr />

    @foreach (var user in Model)
    {
        <div class="user-card">
            <div class="user-info">
                <div>
                    @{
                        var userAsEntity = await userService.GetUserByIdAsync(user.Id);
                        var isAdmin = userManager.IsInRoleAsync(userAsEntity, AdminRoleName).Result;
                     }

                    <h5>@user.FullName</h5>
                    <hr />
                    @if (isAdmin)
                    {
                        <p>Role: <b>Admin</b></p>
                    }
                    else
                    {
                        <p>Role: <b>User</b></p>
                    }
                    <hr />
                    <p>Email: @user.Email</p>
                    <p>Phone: @user.PhoneNumber</p>
                    <p>Posts count: @user.PostsCount</p>
                    <hr />

                    @if (isAdmin)
                    {
                    <a asp-area="Admin" asp-controller="User" asp-action="RemoveAdmin" asp-route-id="@user.Id" class="btn btn-primary">Remove Admin</a>
                    }
                    else
                    {
                    <a asp-area="Admin" asp-controller="User" asp-action="MakeAdmin" asp-route-id="@user.Id" class="btn btn-primary">Make Admin</a>
                    }

                   
                </div>
                <div>
                    @if (OnlineUsersMiddleware.CheckIfUserIsOnline(user.Id))
                    {
                        <span class="user-status user-online">Online <i class="fas fa-check-circle"></i></span>
                    }
                    else
                    {
                        <span class="user-status user-offline">Offline <i class="fas fa-times-circle"></i></span>
                    }
                </div>
            </div>
        </div>
    }
</div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.5.4/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
