@using VelocityAutos.Services.Data.Interfaces
@using VelocityAutos.Web.Infrastructure.Extensions
@model AllCarsQueryModel

@inject IPostService PostService

@{
    ViewData["Title"] = "All cars";
}

<head>
    <link rel="stylesheet" href="~/css/allCars.css" />
</head>

<div class="header">
    <h1>Car Showcase</h1>
</div>

<form method="get">
    <div class="row">
        <div class="form-group col-md-3 d-flex justify-content-between">

            <div class="form-group">
                <label asp-for="Category"></label>
                <select asp-for="Category" class="form-control">
                    <option value="">All</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category">@category</option>
                    }
                </select>

                 <label asp-for="TransmissionType"></label>
                <select asp-for="TransmissionType" class="form-control">
                    <option value="">Automatic</option>
                    @foreach (var transmissionType in Model.TransmissionTypes)
                    {
                        <option value="@transmissionType">@transmissionType</option>
                    }
                </select>

                <label asp-for="FuelType"></label>
                <select asp-for="FuelType" class="form-control">
                    <option value="">Petrol</option>
                    @foreach (var fuelType in Model.FuelTypes)
                    {
                        <option value="@fuelType">@fuelType</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label asp-for="CarsPerPage"></label>
                <select asp-for="CarsPerPage" class="form-control">
                    <option value="4">4</option>
                    <option value="8">8</option>
                    <option value="12">12</option>
                </select>
            </div>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="...">
        </div>

        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="CarSorting"></label>
                <select asp-for="CarSorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Oldest</option>
                    <option value="2">Price (Ascending)</option>
                    <option value="3">Price (Descending)</option>
                    <option value="4">Year (Ascending)</option>
                    <option value="5">Year (Descending)</option>
                </select>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group mt-4 p-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>


@{
    int previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    int maxPage = (int)Math.Ceiling((double)Model.TotalCars /
        Model.CarsPerPage);
}

<br />
<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Car"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.Category"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.CarSorting)"><<</a>
    </div>

    @{
        bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Cars.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary
           @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Car"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.Category"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.CarSorting)">>></a>
    </div>
</div>

@if (!Model.Cars.Any())
{
    <h2 class="text-center">No cars found by the given criteria!</h2>
}

<div class="car-container">

@foreach (var car in Model.Cars)
{
    bool isUserOwner = await PostService.IsUserPostOwnerByIdAsync(car.Id, User.GetId()!);
      <div class="car">
          <img src = "~/audiA4-image3.jpg" alt="@car.Make">
          <div class="car-info">
                @if (isUserOwner  || this.User.IsAdmin())
                {
                    <a asp-area="" asp-controller="Car" asp-action="Edit" asp-route-id="@car.Id" class="btn btn-warning fw-bold">Edit</a>
                }
              <div class="car-title">@car.Make</div>
              <div class="car-description">@car.Model</div>
                <a asp-area="" asp-controller="Car" asp-action="Details" asp-route-id="@car.Id" class="btn btn-primary">Details</a>
          </div>
      </div>
}
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}