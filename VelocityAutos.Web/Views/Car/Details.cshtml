@using static VelocityAutos.Common.EntityValidationConstants.Post
@using VelocityAutos.Services.Data.Interfaces
@using VelocityAutos.Web.Infrastructure.Extensions

@model PostDetailsViewModel

@inject IPostService PostService

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Car Details</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
            font-family: Arial, sans-serif;
        }

        .container {
            max-width: 800px;
            margin-top: 50px;
        }

        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            background-color: #007bff;
            color: white;
            border-radius: 15px 15px 0 0;
        }

        .card-title {
            margin-bottom: 0;
        }

        .list-group-item {
            background-color: transparent;
            border-color: rgba(0, 0, 0, 0.125);
        }

        .seller-details {
            margin-top: 30px;
        }

        .seller-details h3 {
            color: #007bff;
            margin-bottom: 20px;
        }

        body {
            background-image: none;
        }

        .home-text {
            font-size: 0px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="card">
            <div class="card-header">
                <h2 class="card-title">@Model.Car.Make @Model.Car.Model Details</h2>
            </div>
            <div class="card-body">
                <ul class="list-group list-group-flush">
                    <li class="list-group-item"><strong>Make:</strong> @Model.Car.Make</li>
                    <li class="list-group-item"><strong>Model:</strong> @Model.Car.Model</li>
                    <li class="list-group-item"><strong>Price:</strong> @Model.Car.Price</li>
                    <li class="list-group-item"><strong>Month:</strong> @Model.Car.Month</li>
                    <li class="list-group-item"><strong>Year:</strong> @Model.Car.Year</li>
                    <li class="list-group-item"><strong>Mileage:</strong> @Model.Car.Mileage</li>
                    <li class="list-group-item"><strong>Horsepower:</strong> @Model.Car.HorsePower</li>
                    <li class="list-group-item"><strong>Fuel Consumption:</strong> @Model.Car.FuelConsumption</li>
                    <li class="list-group-item"><strong>Color:</strong> @Model.Car.Color</li>
                    @if (!string.IsNullOrEmpty(Model.Car.Description))
                    {
                        <li class="list-group-item"><strong>Description:</strong> @Model.Car.Description</li>
                    }
                    <li class="list-group-item"><strong>Transmission Type:</strong> @Model.Car.TransmissionType</li>
                    <li class="list-group-item"><strong>Fuel Type:</strong> @Model.Car.FuelType</li>
                    <li class="list-group-item"><strong>Category:</strong> @Model.Car.Category</li>
                </ul>
            </div>
        </div>

        <div class="card seller-details">
            <div class="card-header">
                <h2 class="card-title">Seller's Information</h2>
            </div>
            <div class="card-body">
                <ul class="list-group list-group-flush">
                    <li class="list-group-item"><strong>Name:</strong> @Model.SellerName</li>
                    <li class="list-group-item"><strong>Phone Number:</strong> @Model.SellerPhoneNumber</li>
                    @if (string.IsNullOrEmpty(Model.SellerEmailAddress))
                    {
                        <li class="list-group-item"><strong>Email address:</strong> @Model.SellerEmailAddress</li>
                    }
                    <li class="list-group-item"><strong>Added on:</strong> @Model.CreatedOn.ToString(MyDateTimeFormat)</li>
                    @if (Model.UpdatedOn != null)
                    {
                        <li class="list-group-item"><strong>Updated on:</strong> @Model.UpdatedOn?.ToString(MyDateTimeFormat)</li>
                    }
                    @if (Model.DeletedOn != null)
                    {
                        <li class="list-group-item"><strong>Deleted on:</strong> @Model.DeletedOn?.ToString(MyDateTimeFormat)</li>
                    }

                    @{
                        bool isUserOwner = await PostService.IsUserPostOwnerById(Model.Car.Id, User.GetId()!);
                    }

                    @if (isUserOwner)
                    {
                        <a asp-controller="Car" asp-action="Edit" asp-route-id="@Model.Car.Id" class="btn btn-warning fw-bold">Edit</a>
                    }

                </ul>
            </div>
        </div>
    </div>
</body>
</html>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}